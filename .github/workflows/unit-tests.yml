name: Unit Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main, develop ] 
    paths:
      - 'backend/**'

jobs:
  unit-tests:
    name: Fast Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'backend/go.mod'
          cache-dependency-path: 'backend/go.sum'

      - name: Install dependencies
        working-directory: ./backend
        run: go mod download

      - name: Run unit tests (fast)
        working-directory: ./backend
        run: |
          echo "Running fast unit tests with mocks..."
          echo "These tests validate business logic without external dependencies."
          
          # Run only unit tests, exclude integration tests
          go test -v -race -timeout=3m ./... \
            -skip="TestIntegrationSuite" \
            -short \
            -coverprofile=unit-coverage.out \
            -covermode=atomic

      - name: Display test coverage
        working-directory: ./backend
        run: |
          echo ""
          echo "ðŸ“Š Unit Test Coverage Summary:"
          echo "============================="
          go tool cover -func=unit-coverage.out | tail -1
          
      - name: Upload unit test coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./backend/unit-coverage.out
          flags: unit-tests
          name: unit-test-coverage
          fail_ci_if_error: false

  quick-build:
    name: Quick Build Check
    runs-on: ubuntu-latest
    timeout-minutes: 3
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'backend/go.mod'
          cache-dependency-path: 'backend/go.sum'

      - name: Quick build verification
        working-directory: ./backend
        run: |
          echo "Verifying code compiles successfully..."
          go build -v ./cmd/server.go
          echo "âœ… Build successful!"