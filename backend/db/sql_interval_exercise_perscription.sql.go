// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: sql_interval_exercise_perscription.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const intervalExercisePrescriptions_CreateOne = `-- name: IntervalExercisePrescriptions_CreateOne :one
INSERT INTO
    interval_exercise_prescriptions (
        group_id,
        exercise_variation_id,
        plan_interval_id,
        rpe,
        sets,
        reps,
        duration,
        rest
    )
VALUES (
        $1,
        $2,
        $3,
        $4,
        $5,
        $6,
        $7,
        $8
    ) RETURNING id, group_id, exercise_variation_id, plan_interval_id, rpe, sets, reps, duration, rest
`

type IntervalExercisePrescriptions_CreateOneParams struct {
	GroupID             int64
	ExerciseVariationID int64
	PlanIntervalID      int64
	Rpe                 pgtype.Int4
	Sets                int32
	Reps                pgtype.Int4
	Duration            pgtype.Interval
	Rest                pgtype.Interval
}

func (q *Queries) IntervalExercisePrescriptions_CreateOne(ctx context.Context, arg IntervalExercisePrescriptions_CreateOneParams) (IntervalExercisePrescription, error) {
	row := q.db.QueryRow(ctx, intervalExercisePrescriptions_CreateOne,
		arg.GroupID,
		arg.ExerciseVariationID,
		arg.PlanIntervalID,
		arg.Rpe,
		arg.Sets,
		arg.Reps,
		arg.Duration,
		arg.Rest,
	)
	var i IntervalExercisePrescription
	err := row.Scan(
		&i.ID,
		&i.GroupID,
		&i.ExerciseVariationID,
		&i.PlanIntervalID,
		&i.Rpe,
		&i.Sets,
		&i.Reps,
		&i.Duration,
		&i.Rest,
	)
	return i, err
}

const intervalExercisePrescriptions_DeleteOne = `-- name: IntervalExercisePrescriptions_DeleteOne :exec
DELETE FROM interval_exercise_prescriptions WHERE id = $1
`

func (q *Queries) IntervalExercisePrescriptions_DeleteOne(ctx context.Context, id int64) error {
	_, err := q.db.Exec(ctx, intervalExercisePrescriptions_DeleteOne, id)
	return err
}
